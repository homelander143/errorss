#include<stdio.h>
 #include<string.h>
 #include<stdlib.h>
 int main() {
    char label[10], opcode[10], operand[10];
    int address, finaddr, st, diff;
    FILE *fp1, *fp2, *fp3, *fp4;
    fp1 = fopen("assmlist.dat", "w");
    fp2 = fopen("symtab.dat", "r");
    fp3 = fopen("out.dat", "r");
    fp4 = fopen("object.dat", "w");
    if
    }
 (fp1 == NULL || fp2 == NULL || fp3 == NULL || fp4 == NULL) {
  perror("Error opening file");
  return -1;
    fscanf(fp3, "%s %s %s", label, opcode, operand);
    //
    if
    }
 Read the program starting address
 (strcmp(opcode, "START") == 0) {
  fscanf(fp3, "%x %s %s %s", &address, label, opcode, operand);
  finaddr = address;
  // Write header record
  fprintf(fp4, "H^%s^00%x^00%x\n", label, address, finaddr - address);
  st = address;
  diff = address - st;
  fprintf(fp4, "T^00%x^%x", address, diff);
    while (strcmp(opcode, "END") != 0) {
  // Process each line of assembly code
  if (strcmp(opcode, "BYTE") == 0) {
      // 
Handle BYTE directive
 len = strlen(operand);
      fprintf(fp1, "%x\t%s\t%s\t%s\t", address, label, opcode, operand);
      int
      for
      }
 (int i = 2; i < len - 1; i++) {
 fprintf(fp1, "%02x", operand[i]);
 fprintf(fp4, "%02x", operand[i]);
      fprintf(fp1, "\n");
  } else if (strcmp(opcode, "WORD") == 0) {
      // 
Handle WORD directive
      fprintf(fp1, "%x\t%s\t%s\t%s\t00000%s\n", address, label, opcode, operand, 
operand);
      fprintf(fp4, "^00000%s", operand);
  } else if (strcmp(opcode, "RESB") == 0 || strcmp(opcode, "RESW") == 0) {
      // 
Handle RESB and RESW directives
      fprintf(fp1, "%x\t%s\t%s\t%s\n", address, label, opcode, operand);
  } else {
      // 
Handle other instructions
      fprintf(fp1, "%x\t%s\t%s\t%s\t\n", address, label, opcode, operand);
  }
  fscanf(fp3, "%x %s %s %s", &address, label, opcode, operand);
    }
    //
 Write end record
    fprintf(fp1, "%x\t%s\t%s\t%s\n", address, label, opcode, operand);
    fprintf(fp4, "\nE^00%x\n", st);
    //
 Close all files
    fclose(fp1);
    fclose(fp2);
    fclose(fp3);
    fclose(fp4);
    //
 Print contents of files
    printf("\nContents of assmlist.dat:\n");
    fp1 = fopen("assmlist.dat", "r");
    if
 (fp1) {
  char ch;
  while ((ch = fgetc(fp1)) != EOF) {
      printf("%c", ch);
  }
  fclose(fp1);
    }
    printf("\n\nContents of symtab.dat:\n");
    fp2 = fopen("symtab.dat", "r");
    if
 (fp2) {
  char ch;
  while ((ch = fgetc(fp2)) != EOF) {
      printf("%c", ch);
  }
  fclose(fp2);
    }
    printf("\n\nContents of object.dat:\n");
    fp4 = fopen("object.dat", "r");
    if
 (fp4) {
  char ch;
  while ((ch = fgetc(fp4)) != EOF) {
      printf("%c", ch);
  }
  fclose(fp4);
    }
    printf("\n\n");
    printf("\nAssembly process completed.\n");
    return 0;
 }
